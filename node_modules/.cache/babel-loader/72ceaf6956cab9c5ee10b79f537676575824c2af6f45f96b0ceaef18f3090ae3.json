{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from 'react';\nexport class BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderData = () => {\n      // console.log(this.props.headers);\n      var _a;\n      var rData = [this.props.headers];\n      // dataRows is a list of maps; need to filter out headerNames from datamap\n      (_a = this.props.dataRows) === null || _a === void 0 ? void 0 : _a.forEach(dataMap => {\n        var _a;\n        let r = new Array();\n        (_a = this.props.filteredColumns) === null || _a === void 0 ? void 0 : _a.forEach(header => {\n          r.push(dataMap[header]);\n        });\n        rData.push(r);\n      });\n      // @ts-expect-error Getting object from global namespace.\n      var chartData = google.visualization.arrayToDataTable(rData, false);\n      var options = {\n        title: this.props.title,\n        bar: {\n          groupWidth: \"95%\"\n        },\n        legend: {\n          position: \"none\"\n        }\n      };\n      // @ts-expect-error Getting object from global namespace.\n      var chart = new google.charts.Bar(document.getElementById(\"custom_column_chart_\" + this.props.index));\n      chart.draw(chartData, options);\n    };\n    // @ts-expect-error Getting object from target package.\n    google.charts.load(\"current\", {\n      packages: [\"corechart\", \"bar\"]\n    });\n    // @ts-expect-error Getting object from global namespace.\n    google.charts.setOnLoadCallback(() => this.renderData());\n  }\n  render() {\n    return _jsx(\"div\", {\n      className: \"container\",\n      style: {\n        width: 400,\n        height: 200\n      },\n      id: \"custom_column_chart_\" + this.props.index\n    });\n  }\n}","map":{"version":3,"names":["jsx","_jsx","React","BarChart","Component","constructor","props","renderData","_a","rData","headers","dataRows","forEach","dataMap","r","Array","filteredColumns","header","push","chartData","google","visualization","arrayToDataTable","options","title","bar","groupWidth","legend","position","chart","charts","Bar","document","getElementById","index","draw","load","packages","setOnLoadCallback","render","className","style","width","height","id"],"sources":["/Users/uyerra/Documents/Web Final Project/gitrepositories/node_modules/@nravilla/charts-ui-sdk/dist/components/BarChart.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from 'react';\nexport class BarChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderData = () => {\n            // console.log(this.props.headers);\n            var _a;\n            var rData = [this.props.headers];\n            // dataRows is a list of maps; need to filter out headerNames from datamap\n            (_a = this.props.dataRows) === null || _a === void 0 ? void 0 : _a.forEach(dataMap => {\n                var _a;\n                let r = new Array();\n                (_a = this.props.filteredColumns) === null || _a === void 0 ? void 0 : _a.forEach(header => {\n                    r.push(dataMap[header]);\n                });\n                rData.push(r);\n            });\n            // @ts-expect-error Getting object from global namespace.\n            var chartData = google.visualization.arrayToDataTable(rData, false);\n            var options = {\n                title: this.props.title,\n                bar: { groupWidth: \"95%\" },\n                legend: { position: \"none\" },\n            };\n            // @ts-expect-error Getting object from global namespace.\n            var chart = new google.charts.Bar(document.getElementById(\"custom_column_chart_\" + this.props.index));\n            chart.draw(chartData, options);\n        };\n        // @ts-expect-error Getting object from target package.\n        google.charts.load(\"current\", { packages: [\"corechart\", \"bar\"] });\n        // @ts-expect-error Getting object from global namespace.\n        google.charts.setOnLoadCallback(() => this.renderData());\n    }\n    render() {\n        return (_jsx(\"div\", { className: \"container\", style: { width: 400, height: 200 }, id: \"custom_column_chart_\" + this.props.index }));\n    }\n}\n"],"mappings":";AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,MAAMC,QAAQ,SAASD,KAAK,CAACE,SAAS,CAAC;EAC1CC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,UAAU,GAAG,MAAM;MACpB;MACA,IAAIC,EAAE;MACN,IAAIC,KAAK,GAAG,CAAC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC;MAChC;MACA,CAACF,EAAE,GAAG,IAAI,CAACF,KAAK,CAACK,QAAQ,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,OAAO,CAACC,OAAO,IAAI;QAClF,IAAIL,EAAE;QACN,IAAIM,CAAC,GAAG,IAAIC,KAAK,CAAC,CAAC;QACnB,CAACP,EAAE,GAAG,IAAI,CAACF,KAAK,CAACU,eAAe,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,OAAO,CAACK,MAAM,IAAI;UACxFH,CAAC,CAACI,IAAI,CAACL,OAAO,CAACI,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC;QACFR,KAAK,CAACS,IAAI,CAACJ,CAAC,CAAC;MACjB,CAAC,CAAC;MACF;MACA,IAAIK,SAAS,GAAGC,MAAM,CAACC,aAAa,CAACC,gBAAgB,CAACb,KAAK,EAAE,KAAK,CAAC;MACnE,IAAIc,OAAO,GAAG;QACVC,KAAK,EAAE,IAAI,CAAClB,KAAK,CAACkB,KAAK;QACvBC,GAAG,EAAE;UAAEC,UAAU,EAAE;QAAM,CAAC;QAC1BC,MAAM,EAAE;UAAEC,QAAQ,EAAE;QAAO;MAC/B,CAAC;MACD;MACA,IAAIC,KAAK,GAAG,IAAIT,MAAM,CAACU,MAAM,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,sBAAsB,GAAG,IAAI,CAAC3B,KAAK,CAAC4B,KAAK,CAAC,CAAC;MACrGL,KAAK,CAACM,IAAI,CAAChB,SAAS,EAAEI,OAAO,CAAC;IAClC,CAAC;IACD;IACAH,MAAM,CAACU,MAAM,CAACM,IAAI,CAAC,SAAS,EAAE;MAAEC,QAAQ,EAAE,CAAC,WAAW,EAAE,KAAK;IAAE,CAAC,CAAC;IACjE;IACAjB,MAAM,CAACU,MAAM,CAACQ,iBAAiB,CAAC,MAAM,IAAI,CAAC/B,UAAU,CAAC,CAAC,CAAC;EAC5D;EACAgC,MAAMA,CAAA,EAAG;IACL,OAAQtC,IAAI,CAAC,KAAK,EAAE;MAAEuC,SAAS,EAAE,WAAW;MAAEC,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;MAAEC,EAAE,EAAE,sBAAsB,GAAG,IAAI,CAACtC,KAAK,CAAC4B;IAAM,CAAC,CAAC;EACtI;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}